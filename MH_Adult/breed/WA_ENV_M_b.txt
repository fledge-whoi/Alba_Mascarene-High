 #### WA model state, age and sex dependent 

model {
    # sample size
    # n_year
    # n_ind

    ## Derived variable "STATE": ##
    ## 1: successful breeder (SB)## Female
    ## 2: Failed breeder (FB)## Female
    ## 3: Post successful breeder (PSB)## Female
    ## 4: Post failed breeder (PFB)## Female
    ## 5: Non-breeder (NB)## Female

    ### LIKELIHOOD ###
    for(i in 1:n_ind) 
    { 
    #Experience  
    STATE[i,FIRST[i]] <- 2*BREED[i, FIRST[i]]-OFFSPRING[i,FIRST[i]]; 
    # rest of the life histories
    for(t in (FIRST[i] + 1):LAST[i]) 
    {
    #survival same for Pre, SB and FB, PSB and PFB, NSB and NFB
    SURVIVAL[i, t] ~ dbern(phi_star[i, t] * SURVIVAL[i, t-1])
    phi_star[i, t] <-   ilogit(mu_phi[STATE[i,t-1],AGE[i,t]]);
 
    # recruitment and breed (age and state dependent)
    #Pre, SB,FB,PSB,PFB,NSB = NFB
    BREED[i, t] ~ dbern(rho_star[i, t] * SURVIVAL[i, t]);
    rho_star[i,t] <- ifelse(t<16,ilogit(mu_rho_1965[STATE[i,t-1],AGE[i,t]]),ilogit(mu_rho_1980[STATE[i,t-1],AGE[i,t]] + epsilon[t] + slope*COV[t,]));

    # breeding success (age and state dependent)
    #Pre, SB, FB, PSB = PFB and NSB = NFB
    OFFSPRING[i, t] ~ dbern(pi_star[i,t] * BREED[i, t])
    pi_star[i,t] <-  ilogit(mu_pi[STATE[i,t-1],AGE[i,t]]);

    #state
    STATE[i,t] <- BREED[i, t]*2 + OFFSPRING[i, t]*(-1) + (1-BREED[i, t])*BREED[i, t-1]*(-1) + (1-BREED[i, t])*OFFSPRING[i, t-1]*(-1) + (1-BREED[i, t])*5;
    # detection: you can only be detected if you're currently alive (age and state dependent)
    #SB=FB; NSB=NFB; Pre-recruitment
    DETECTED[i, t] ~ dbern(proba[i, t] * SURVIVAL[i, t]);
    logit(proba[i, t]) <- mu_p[STATE[i,t]];
    }
    }

    ### PRIORS ###
    ### PRIORS ###
    prec_gamma <- pow(log(2)/2, -2);
    slope ~ dnorm(0.0, prec_gamma)
    #s: state
    #a: age

    tau.eps1 <- pow(sigma.eps1, -2) #accuracy (normal distribution is defined by mean and inverse error)
    sigma.eps1 ~ dunif(0, 5) #standard deviation
    for (i in 1:15)
     {
      epsilon[i] <- 0
     }
    for (i in 16:n_year)
     {
      epsilon[i] ~ dnorm(0, tau.eps1)
     }
    #survival: same for SB and FB, PSB and PFB, NB
    for (s in c(1,3,5))
    {
      for (a in c(6,9,31))
      {mu_phi[s,a] ~ dnorm(0.0, 0.4444444)}
      for (a in c(7:8))
      {mu_phi[s,a]<-mu_phi[s,6]}
      for (a in c(10:30))
      {mu_phi[s,a]<-mu_phi[s,9]}
      for (a in c(32:max_age))
      {mu_phi[s,a]<-mu_phi[s,31]}
    }
    for (a in (6:max_age))
    {
      mu_phi[2,a]<-mu_phi[1,a]
      mu_phi[4,a]<-mu_phi[3,a]
    }

    #breeding: SB,FB,PSB,PFB,NB
    #post-recruiment ind
    for (s in c(1:5))
    {
      for (a in c(6,11,22))
      {mu_rho_1965[s,a] ~ dnorm(0.0, 0.4444444);}
      for (a in c(7:10))
      {mu_rho_1965[s,a]<-mu_rho_1965[s,6]}
      for (a in c(12:21))
      {mu_rho_1965[s,a]<-mu_rho_1965[s,11]}
      for (a in c(23:max_age))
      {mu_rho_1965[s,a]<-mu_rho_1965[s,22]}
    }
    for (s in c(1:5))
    {
      for (a in c(6,11,22))
      {mu_rho_1980[s,a] ~ dnorm(0.0, 0.4444444);}
      for (a in c(7:10))
      {mu_rho_1980[s,a]<-mu_rho_1980[s,6]}
      for (a in c(12:21))
      {mu_rho_1980[s,a]<-mu_rho_1980[s,11]}
      for (a in c(23:max_age))
      {mu_rho_1980[s,a]<-mu_rho_1980[s,22]}
    }

    #offspring: Pre, SB, FB, PSB = PFB and NB
    #post-recruiment ind
    for (s in c(1,2,3,5))
    {
      for (a in c(6,11,22))
      {mu_pi[s,a] ~ dnorm(0.0, 0.4444444);}
      for (a in c(7:10))
      {mu_pi[s,a]<-mu_pi[s,6]}
      for (a in c(12:21))
      {mu_pi[s,a]<-mu_pi[s,11]}
      for (a in c(23:max_age))
      {mu_pi[s,a]<-mu_pi[s,22]}
    }
    for (a in (6:max_age))
    {
      mu_pi[4,a]<-mu_pi[3,a]
    }

    #detection: pre, SB=FB=1; PSB=PFB=0; NB
    #post-recruiment ind
    mu_p[1] ~ dnorm(0.0, 0.4444444);
    mu_p[3] ~ dnorm(0.0, 0.4444444);
    mu_p[5] ~ dnorm(0.0, 0.4444444);   
    #SB=FB, PSB=PFB
    mu_p[2]<-mu_p[1]
    mu_p[4]<-mu_p[3]
    #############################
    # Derived quantities
    for (i in 7:max_age)
    {
       mean.Mrho_SB[i] <- ilogit(mu_rho_1980[1,i])
       mean.Mrho_FB[i] <- ilogit(mu_rho_1980[2,i])
    }
    for (i in 8:max_age)
    {
      mean.Mrho_PSB[i] <- ilogit(mu_rho_1980[3,i])
      mean.Mrho_PFB[i] <- ilogit(mu_rho_1980[4,i])
    }
    for (i in 9:max_age)
    {
      mean.Mrho_NB[i] <- ilogit(mu_rho_1980[5,i])
    }
    }








    